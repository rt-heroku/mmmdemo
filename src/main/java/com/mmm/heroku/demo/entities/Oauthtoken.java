/*
 * Created on 9 Aug 2018 ( Time 15:19:54 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.mmm.heroku.demo.entities;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "oauthtoken"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="oauthtoken", schema="salesforce" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="Oauthtoken.countAll", query="SELECT COUNT(x) FROM Oauthtoken x" )
} )
public class Oauthtoken implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="lastuseddate")
    private Date       lastuseddate ;

    @Column(name="userid", length=18)
    private String     userid       ;

    @Column(name="usecount")
    private Integer    usecount     ;

    @Column(name="requesttoken", length=255)
    private String     requesttoken ;

    @Column(name="appname", length=255)
    private String     appname      ;

    @Column(name="appmenuitemid", length=18)
    private String     appmenuitemid ;

    @Column(name="deletetoken", length=255)
    private String     deletetoken  ;

    @Column(name="accesstoken", length=255)
    private String     accesstoken  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="createddate")
    private Date       createddate  ;

    @Column(name="sfid", length=18)
    private String     sfid         ;

    @Column(name="_hc_lastop", length=32)
    private String     hcLastop     ;

    @Column(name="_hc_err", length=2147483647)
    private String     hcErr        ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Oauthtoken()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id )
    {
        this.id = id ;
    }
    public Integer getId()
    {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : lastuseddate ( timestamp ) 
    public void setLastuseddate( Date lastuseddate )
    {
        this.lastuseddate = lastuseddate;
    }
    public Date getLastuseddate()
    {
        return this.lastuseddate;
    }

    //--- DATABASE MAPPING : userid ( varchar ) 
    public void setUserid( String userid )
    {
        this.userid = userid;
    }
    public String getUserid()
    {
        return this.userid;
    }

    //--- DATABASE MAPPING : usecount ( int4 ) 
    public void setUsecount( Integer usecount )
    {
        this.usecount = usecount;
    }
    public Integer getUsecount()
    {
        return this.usecount;
    }

    //--- DATABASE MAPPING : requesttoken ( varchar ) 
    public void setRequesttoken( String requesttoken )
    {
        this.requesttoken = requesttoken;
    }
    public String getRequesttoken()
    {
        return this.requesttoken;
    }

    //--- DATABASE MAPPING : appname ( varchar ) 
    public void setAppname( String appname )
    {
        this.appname = appname;
    }
    public String getAppname()
    {
        return this.appname;
    }

    //--- DATABASE MAPPING : appmenuitemid ( varchar ) 
    public void setAppmenuitemid( String appmenuitemid )
    {
        this.appmenuitemid = appmenuitemid;
    }
    public String getAppmenuitemid()
    {
        return this.appmenuitemid;
    }

    //--- DATABASE MAPPING : deletetoken ( varchar ) 
    public void setDeletetoken( String deletetoken )
    {
        this.deletetoken = deletetoken;
    }
    public String getDeletetoken()
    {
        return this.deletetoken;
    }

    //--- DATABASE MAPPING : accesstoken ( varchar ) 
    public void setAccesstoken( String accesstoken )
    {
        this.accesstoken = accesstoken;
    }
    public String getAccesstoken()
    {
        return this.accesstoken;
    }

    //--- DATABASE MAPPING : createddate ( timestamp ) 
    public void setCreateddate( Date createddate )
    {
        this.createddate = createddate;
    }
    public Date getCreateddate()
    {
        return this.createddate;
    }

    //--- DATABASE MAPPING : sfid ( varchar ) 
    public void setSfid( String sfid )
    {
        this.sfid = sfid;
    }
    public String getSfid()
    {
        return this.sfid;
    }

    //--- DATABASE MAPPING : _hc_lastop ( varchar ) 
    public void setHcLastop( String hcLastop )
    {
        this.hcLastop = hcLastop;
    }
    public String getHcLastop()
    {
        return this.hcLastop;
    }

    //--- DATABASE MAPPING : _hc_err ( text ) 
    public void setHcErr( String hcErr )
    {
        this.hcErr = hcErr;
    }
    public String getHcErr()
    {
        return this.hcErr;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(lastuseddate);
        sb.append("|");
        sb.append(userid);
        sb.append("|");
        sb.append(usecount);
        sb.append("|");
        sb.append(requesttoken);
        sb.append("|");
        sb.append(appname);
        sb.append("|");
        sb.append(appmenuitemid);
        sb.append("|");
        sb.append(deletetoken);
        sb.append("|");
        sb.append(accesstoken);
        sb.append("|");
        sb.append(createddate);
        sb.append("|");
        sb.append(sfid);
        sb.append("|");
        sb.append(hcLastop);
        sb.append("|");
        sb.append(hcErr);
        return sb.toString(); 
    } 

}